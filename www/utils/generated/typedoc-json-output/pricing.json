{
	"id": 9164,
	"name": "pricing",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 9688,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9689,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 9690,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 9691,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 9692,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 9688,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 9465,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 9466,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 9474,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 9467,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9468,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9469,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9470,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9688,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9471,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9472,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9473,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9466,
						9467,
						9468,
						9469,
						9470,
						9471,
						9472,
						9473
					]
				}
			],
			"typeParameters": [
				{
					"id": 9474,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 9704,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 9705,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9707,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9707,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 9706,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9707,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9707,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9705,
						9706
					]
				}
			],
			"typeParameters": [
				{
					"id": 9707,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9479,
					"name": "FilterablePriceSetProps"
				},
				{
					"type": "reference",
					"target": 9495,
					"name": "FilterablePriceProps"
				},
				{
					"type": "reference",
					"target": 9534,
					"name": "FilterablePriceRuleProps"
				},
				{
					"type": "reference",
					"target": 9566,
					"name": "FilterablePriceListProps"
				},
				{
					"type": "reference",
					"target": 9597,
					"name": "FilterablePriceListRuleProps"
				},
				{
					"type": "reference",
					"target": 9623,
					"name": "FilterablePricePreferenceProps"
				},
				{
					"type": "reference",
					"target": 9708,
					"name": "FilterableMoneyAmountProps"
				}
			]
		},
		{
			"id": 9516,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 9517,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9518,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9517
					]
				}
			],
			"typeParameters": [
				{
					"id": 9518,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 9519,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 9520,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9521,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9520
					]
				}
			],
			"typeParameters": [
				{
					"id": 9521,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 9821,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9822,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9822,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9822,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 9852,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 9856,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9822,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 9859,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9822,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 9823,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9824,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 9824,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 9824,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 9824,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 9852,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9853,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9854,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 9855,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										9854
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9890,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9891,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9891,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 9891,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 9891,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 9880,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9889,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9889,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 9881,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 9882,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									9882
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 9890,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9889,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 9883,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9884,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9884
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9890,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 9889,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 9885,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 9886,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											9886
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 9890,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 9889,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 9887,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 9888,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												9888
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 9890,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 9722,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9743,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9723,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9724,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9821,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9743,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9725,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9821,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9743,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9726,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 9823,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9743,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9823,
											"typeArguments": [
												{
													"type": "reference",
													"target": 9743,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 9727,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9823,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9728,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9823,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9743,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9729,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9823,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9743,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 9730,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9821,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9731,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9823,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9732,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9823,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9733,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9823,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9734,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9823,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9743,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9735,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9736,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9737,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9738,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9739,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9740,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9741,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 9742,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9724,
								9725,
								9726,
								9727,
								9728,
								9729,
								9730,
								9731,
								9732,
								9733,
								9734,
								9735,
								9736,
								9737,
								9738,
								9739,
								9740,
								9741,
								9742
							]
						}
					]
				}
			}
		},
		{
			"id": 9877,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9878,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9878,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 9823,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9878,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 9880,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9878,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 9859,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9860,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9722,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9877,
								"typeArguments": [
									{
										"type": "reference",
										"target": 9860,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 9877,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9860,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9877,
							"typeArguments": [
								{
									"type": "reference",
									"target": 9860,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 9879,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 9871,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9875,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 9876,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 9875,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 9875,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 9875,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 9722,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 9875,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 9875,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 9872,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 9873,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 9874,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 9856,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 9876,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 9879,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 9856,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9857,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 9858,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 9858,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 9857,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 9864,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 9871,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9858,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 9871,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9857,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 9858,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 9861,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9862,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9863,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9863
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9846,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9851,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9847,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9848,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9849,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 9861,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 9850,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 9851,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9848,
								9849,
								9850
							]
						}
					]
				}
			}
		},
		{
			"id": 9793,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9796,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 9846,
						"typeArguments": [
							{
								"type": "reference",
								"target": 9796,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9794,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9795,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9795
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9804,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9813,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9805,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9806,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9807,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 9813,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 9808,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9809,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9810,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9811,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 9812,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9806,
								9807,
								9808,
								9809,
								9810,
								9811,
								9812
							]
						}
					]
				}
			}
		},
		{
			"id": 9836,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9837,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9838,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9839,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9840,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9841,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9842,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 9843,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 9844,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 9845,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9838,
								9839,
								9840,
								9841,
								9842,
								9843,
								9844,
								9845
							]
						}
					]
				}
			}
		},
		{
			"id": 9832,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9833,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9834,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9835,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9833,
						9834,
						9835
					]
				}
			]
		},
		{
			"id": 9761,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9762,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9763,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 9832,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 9832,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 9764,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 9765,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 9766,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9767,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														9766,
														9767
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9768,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9769,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9836,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9770,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 9771,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 9772,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 9773,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 9774,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 9836,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											9772,
											9773,
											9774
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 9775,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9762,
						9763,
						9764,
						9768,
						9769,
						9770,
						9775
					]
				}
			]
		},
		{
			"id": 9864,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 9870,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9865,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 9866,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 9869,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 9870,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 9867,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"signatures": [
												{
													"id": 9868,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 9870,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 9779,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9780,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9781,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 9782,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9783,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9784,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9781,
										9782,
										9783,
										9784
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 9642,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 9761,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9643,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9644,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9645,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9776,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9646,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 9647,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 9648,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 9649,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 9650,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 9651,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 9652,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 9653,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 9654,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							9652,
																							9653,
																							9654
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 9655,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 9776,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															9648,
															9649,
															9650,
															9655
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 9656,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9657,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9658,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9659,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 9660,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 9661,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9662,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9663,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 9664,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9665,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 9666,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 9779,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														9664,
														9665,
														9666
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9644,
										9645,
										9646,
										9656,
										9657,
										9658,
										9659,
										9660,
										9661,
										9662
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9776,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 9836,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 9777,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9778,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9778
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9409,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9410,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"signatures": [
						{
							"id": 9411,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"type": {
								"type": "reference",
								"target": 9642,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 9412,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9413,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9414,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9415,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 9416,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 9417,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9418,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 9419,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 9420,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 9421,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 9422,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9414,
										9417,
										9420
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9412
					]
				},
				{
					"title": "Methods",
					"children": [
						9410
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9165,
					"name": "IPricingModuleService"
				}
			]
		},
		{
			"id": 9693,
			"name": "MoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A money amount's data. A money amount represents a price."
					}
				]
			},
			"children": [
				{
					"id": 9694,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9695,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9696,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9697,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9698,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9699,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules that apply to this price"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9700,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules that apply to this price"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9522,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9701,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9702,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9703,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the money_amount was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9694,
						9695,
						9696,
						9697,
						9698,
						9699,
						9700,
						9701,
						9702,
						9703
					]
				}
			]
		},
		{
			"id": 9814,
			"name": "CreateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The money amount to create."
					}
				]
			},
			"children": [
				{
					"id": 9815,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9816,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9817,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9667,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9818,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9819,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9815,
						9816,
						9817,
						9818,
						9819
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9713,
					"name": "CreatePricesDTO"
				},
				{
					"type": "reference",
					"target": 9745,
					"name": "CreatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 9826,
			"name": "UpdateMoneyAmountDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 9827,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9828,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9829,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9667,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9830,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9831,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9827,
						9828,
						9829,
						9830,
						9831
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9753,
					"name": "UpdatePriceListPriceDTO"
				}
			]
		},
		{
			"id": 9708,
			"name": "FilterableMoneyAmountProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on a money amount."
					}
				]
			},
			"children": [
				{
					"id": 9711,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9708,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9708,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9712,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9708,
									"name": "FilterableMoneyAmountProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9708,
											"name": "FilterableMoneyAmountProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9709,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9710,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter money amounts by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9711,
						9712,
						9709,
						9710
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9708,
							"name": "FilterableMoneyAmountProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9720,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's status."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "draft"
					}
				]
			}
		},
		{
			"id": 9721,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's type.\n\"sale\" - The price list's prices are used for a sale.\n\"override\" - The price list's prices override original prices. This affects the calculated price of associated price sets."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sale"
					},
					{
						"type": "literal",
						"value": "override"
					}
				]
			}
		},
		{
			"id": 9554,
			"name": "PriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price list's details."
					}
				]
			},
			"children": [
				{
					"id": 9555,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9556,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9557,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9558,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9559,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9720,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9560,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9721,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9561,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9562,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules associated with this price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9563,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9502,
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9564,
					"name": "money_amounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated money amounts."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9693,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9565,
					"name": "price_list_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's rules."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9592,
							"name": "PriceListRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9555,
						9556,
						9557,
						9558,
						9559,
						9560,
						9561,
						9562,
						9563,
						9564,
						9565
					]
				}
			]
		},
		{
			"id": 9745,
			"name": "CreatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 9748,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9815,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 9749,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9816,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 9750,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9667,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9817,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 9751,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9818,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 9752,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9819,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 9746,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9747,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9825,
						"name": "CreatePriceListPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9748,
						9749,
						9750,
						9751,
						9752,
						9746,
						9747
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9814,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9753,
			"name": "UpdatePriceListPriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a money amount. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which money amount to update."
					}
				]
			},
			"children": [
				{
					"id": 9756,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9827,
						"name": "UpdateMoneyAmountDTO.id"
					}
				},
				{
					"id": 9757,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the currency to associate with the money amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9828,
						"name": "UpdateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 9758,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9667,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9829,
						"name": "UpdateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 9759,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9830,
						"name": "UpdateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 9760,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9831,
						"name": "UpdateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 9754,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9755,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9825,
						"name": "CreatePriceListPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9756,
						9757,
						9758,
						9759,
						9760,
						9754,
						9755
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9826,
					"name": "UpdateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9825,
			"name": "CreatePriceListPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price list.\n\nEach key of the object is an attribute, and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 9744,
			"name": "CreatePriceListRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's rules to be set. Each key of the object the attribute, and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 9575,
			"name": "CreatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list to create."
					}
				]
			},
			"children": [
				{
					"id": 9576,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9577,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9578,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9579,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9580,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9720,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9581,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9721,
						"name": "PriceListType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9582,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9744,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9583,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices associated with the price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9745,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9576,
						9577,
						9578,
						9579,
						9580,
						9581,
						9582,
						9583
					]
				}
			]
		},
		{
			"id": 9584,
			"name": "UpdatePriceListDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a price list."
					}
				]
			},
			"children": [
				{
					"id": 9585,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9586,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9587,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's description."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9588,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is enabled starting from this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9589,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list expires after this date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9590,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list's status."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9720,
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9591,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to be created and associated with the price list."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9744,
						"name": "CreatePriceListRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9585,
						9586,
						9587,
						9588,
						9589,
						9590,
						9591
					]
				}
			]
		},
		{
			"id": 9566,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price lists."
					}
				]
			},
			"children": [
				{
					"id": 9573,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9566,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9566,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9574,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9566,
									"name": "FilterablePriceListProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9566,
											"name": "FilterablePriceListProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9567,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find price lists by title or description through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9568,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price lists by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9569,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9722,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9570,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end dates to filter price lists by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9722,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9571,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9720,
							"name": "PriceListStatus",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9572,
					"name": "rules_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of rules to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9573,
						9574,
						9567,
						9568,
						9569,
						9570,
						9571,
						9572
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9566,
							"name": "FilterablePriceListProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9597,
			"name": "FilterablePriceListRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price list rules."
					}
				]
			},
			"children": [
				{
					"id": 9601,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9597,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9597,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9602,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9597,
									"name": "FilterablePriceListRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9597,
											"name": "FilterablePriceListRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9598,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9599,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values to filter price list rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9600,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price list rules by the ID of their associated price lists."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9601,
						9602,
						9598,
						9599,
						9600
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9597,
							"name": "FilterablePriceListRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9592,
			"name": "PriceListRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list rule's details."
					}
				]
			},
			"children": [
				{
					"id": 9593,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9594,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9595,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9596,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price list."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9554,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9593,
						9594,
						9595,
						9596
					]
				}
			]
		},
		{
			"id": 9603,
			"name": "AddPriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 9604,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9605,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9745,
							"name": "CreatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9604,
						9605
					]
				}
			]
		},
		{
			"id": 9606,
			"name": "UpdatePriceListPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to be added to a price list."
					}
				]
			},
			"children": [
				{
					"id": 9607,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9608,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9753,
							"name": "UpdatePriceListPriceDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9607,
						9608
					]
				}
			]
		},
		{
			"id": 9609,
			"name": "SetPriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to set in a price list."
					}
				]
			},
			"children": [
				{
					"id": 9610,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to set its rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9611,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price list. Each key of the object is the attribute, and its value\nis the value(s) of the rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9610,
						9611
					]
				}
			]
		},
		{
			"id": 9612,
			"name": "RemovePriceListRulesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The rules to remove from a price list."
					}
				]
			},
			"children": [
				{
					"id": 9613,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price list to remove rules from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9614,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to remove from the price list. Each item being the attribute."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9613,
						9614
					]
				}
			]
		},
		{
			"id": 9615,
			"name": "PricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price preference's data."
					}
				]
			},
			"children": [
				{
					"id": 9616,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price preference."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9617,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9618,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9619,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9620,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9621,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9622,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price preference was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9616,
						9617,
						9618,
						9619,
						9620,
						9621,
						9622
					]
				}
			]
		},
		{
			"id": 9633,
			"name": "UpsertPricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9634,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price preference."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9635,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9639,
						"name": "UpdatePricePreferenceDTO.attribute"
					}
				},
				{
					"id": 9636,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9640,
						"name": "UpdatePricePreferenceDTO.value"
					}
				},
				{
					"id": 9637,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9641,
						"name": "UpdatePricePreferenceDTO.is_tax_inclusive"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9634,
						9635,
						9636,
						9637
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9638,
					"name": "UpdatePricePreferenceDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9638,
			"name": "UpdatePricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9639,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9640,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9641,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9639,
						9640,
						9641
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9633,
					"name": "UpsertPricePreferenceDTO"
				}
			]
		},
		{
			"id": 9629,
			"name": "CreatePricePreferenceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9630,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule attribute for the preference"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9631,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rule value for the preference"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9632,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag specifying whether prices for the specified rule are tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9630,
						9631,
						9632
					]
				}
			]
		},
		{
			"id": 9623,
			"name": "FilterablePricePreferenceProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 9627,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9623,
									"name": "FilterablePricePreferenceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9623,
											"name": "FilterablePricePreferenceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9628,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9623,
									"name": "FilterablePricePreferenceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9623,
											"name": "FilterablePricePreferenceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9624,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price preferences by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9625,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Attributes to filter price preferences by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9626,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter price preferences by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9627,
						9628,
						9624,
						9625,
						9626
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9623,
							"name": "FilterablePricePreferenceProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9522,
			"name": "PriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule's data."
					}
				]
			},
			"children": [
				{
					"id": 9523,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9524,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9525,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated price set."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9475,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9526,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9527,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9528,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9529,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9530,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9531,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9532,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9533,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price_rule was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9523,
						9524,
						9525,
						9526,
						9527,
						9528,
						9529,
						9530,
						9531,
						9532,
						9533
					]
				}
			]
		},
		{
			"id": 9540,
			"name": "CreatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price rule to create."
					}
				]
			},
			"children": [
				{
					"id": 9541,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9542,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9543,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9544,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9545,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9541,
						9542,
						9543,
						9544,
						9545
					]
				}
			]
		},
		{
			"id": 9546,
			"name": "UpdatePriceRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price rule. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which price rule to update."
					}
				]
			},
			"children": [
				{
					"id": 9547,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9548,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9549,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the price rule"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9550,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the price rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9551,
					"name": "priority",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The priority of the price rule in comparison to other applicable price rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9552,
					"name": "price_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9553,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9547,
						9548,
						9549,
						9550,
						9551,
						9552,
						9553
					]
				}
			]
		},
		{
			"id": 9534,
			"name": "FilterablePriceRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price rules."
					}
				]
			},
			"children": [
				{
					"id": 9538,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9534,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9534,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9539,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9534,
									"name": "FilterablePriceRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9534,
											"name": "FilterablePriceRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9535,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9536,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter price rules by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9537,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price rule's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9538,
						9539,
						9535,
						9536,
						9537
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9534,
							"name": "FilterablePriceRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9425,
			"name": "PricingContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to calculate prices. For example, you can specify the currency code to calculate prices in."
					}
				]
			},
			"children": [
				{
					"id": 9426,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9426
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9479,
					"name": "FilterablePriceSetProps"
				}
			]
		},
		{
			"id": 9423,
			"name": "PricingFilters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply when calculating prices."
					}
				]
			},
			"children": [
				{
					"id": 9424,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs of the price sets to use in the\ncalculation."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9424
					]
				}
			]
		},
		{
			"id": 9475,
			"name": "PriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set's data."
					}
				]
			},
			"children": [
				{
					"id": 9476,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9477,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices that belong to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9693,
							"name": "MoneyAmountDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9478,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price based on the context."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9440,
						"name": "CalculatedPriceSet",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9476,
						9477,
						9478
					]
				}
			]
		},
		{
			"id": 9440,
			"name": "CalculatedPriceSet",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The calculated price for a specific price set and context."
					}
				]
			},
			"children": [
				{
					"id": 9441,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9442,
					"name": "is_calculated_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is associated with a price list. During the calculation process, if no valid price list is found,\nthe calculated price is set to the original price, which doesn't belong to a price list. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9443,
					"name": "is_calculated_price_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price is tax inclusive or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9444,
					"name": "calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the calculated price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9682,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9445,
					"name": "raw_calculated_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9683,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9446,
					"name": "is_original_price_price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is associated with a price list. During the calculation process, if the price list of the calculated price is of type override,\nthe original price will be the same as the calculated price. In that case, the value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9447,
					"name": "is_original_price_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price is tax inclusive or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9448,
					"name": "original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the original price, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9682,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9449,
					"name": "raw_original_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9683,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 9450,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the calculated price, or null if there isn't a calculated price."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9451,
					"name": "calculated_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the calculated price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9452,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9453,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the calculated price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9454,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9455,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9456,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 9682,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 9457,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 9682,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9453,
										9454,
										9455,
										9456,
										9457
									]
								}
							]
						}
					}
				},
				{
					"id": 9458,
					"name": "original_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the original price."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9459,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9460,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price selected as the original price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9461,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9462,
									"name": "price_list_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the associated price list, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 9463,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`min_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 9682,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 9464,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`max_quantity`"
											},
											{
												"kind": "text",
												"text": " field defined on a price."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 9682,
												"name": "BigNumberValue",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										9460,
										9461,
										9462,
										9463,
										9464
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9441,
						9442,
						9443,
						9444,
						9445,
						9446,
						9447,
						9448,
						9449,
						9450,
						9451,
						9458
					]
				}
			]
		},
		{
			"id": 9820,
			"name": "CreatePriceSetPriceRules",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price rules to be set for each price in the price set.\n\nEach key of the object is a the attribute, and its value\nis the values of the rule."
					}
				]
			},
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 9713,
			"name": "CreatePricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to create part of a price set."
					}
				]
			},
			"children": [
				{
					"id": 9715,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9815,
						"name": "CreateMoneyAmountDTO.id"
					}
				},
				{
					"id": 9716,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this money amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9816,
						"name": "CreateMoneyAmountDTO.currency_code"
					}
				},
				{
					"id": 9717,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of this money amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9667,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9817,
						"name": "CreateMoneyAmountDTO.amount"
					}
				},
				{
					"id": 9718,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9818,
						"name": "CreateMoneyAmountDTO.min_quantity"
					}
				},
				{
					"id": 9719,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this money amount to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9819,
						"name": "CreateMoneyAmountDTO.max_quantity"
					}
				},
				{
					"id": 9714,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules to add to the price. The object's keys are the attribute, and values are the value of that rule associated with this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9820,
						"name": "CreatePriceSetPriceRules",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9715,
						9716,
						9717,
						9718,
						9719,
						9714
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9814,
					"name": "CreateMoneyAmountDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9492,
			"name": "AddPricesDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The prices to add to a price set."
					}
				]
			},
			"children": [
				{
					"id": 9493,
					"name": "priceSetId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price set to add prices to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9494,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to add to the price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9713,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9493,
						9494
					]
				}
			]
		},
		{
			"id": 9485,
			"name": "CreatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price set to create."
					}
				]
			},
			"children": [
				{
					"id": 9486,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9713,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9486
					]
				}
			]
		},
		{
			"id": 9487,
			"name": "UpsertPriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to upsert in a price set."
					}
				]
			},
			"children": [
				{
					"id": 9488,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the price set to update.\nIf not provided, a price set is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9489,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9713,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9491,
						"name": "UpdatePriceSetDTO.prices"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9488,
						9489
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9490,
					"name": "UpdatePriceSetDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9490,
			"name": "UpdatePriceSetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a price set."
					}
				]
			},
			"children": [
				{
					"id": 9491,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to create and add to this price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9713,
							"name": "CreatePricesDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9491
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 9487,
					"name": "UpsertPriceSetDTO"
				}
			]
		},
		{
			"id": 9479,
			"name": "FilterablePriceSetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on price sets."
					}
				]
			},
			"children": [
				{
					"id": 9482,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9479,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9479,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9483,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9479,
									"name": "FilterablePriceSetProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9479,
											"name": "FilterablePriceSetProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9484,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "an object whose keys are the name of the context attribute. Its value can be a string or a BigNumberInput. For example, you can pass the "
							},
							{
								"kind": "code",
								"text": "`currency_code`"
							},
							{
								"kind": "text",
								"text": " property with its value being the currency code to calculate the price in.\nAnother example is passing the "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " property to calculate the price for that specified quantity, which finds a price set whose "
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions match the specified quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 9667,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9426,
						"name": "PricingContext.context"
					}
				},
				{
					"id": 9480,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price sets by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9481,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a price set's associated money amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9708,
						"name": "FilterableMoneyAmountProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9482,
						9483,
						9484,
						9480,
						9481
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9479,
							"name": "FilterablePriceSetProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 9425,
					"name": "PricingContext",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9502,
			"name": "PriceDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A price's data."
					}
				]
			},
			"children": [
				{
					"id": 9503,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9504,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9505,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of this price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9506,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of this price."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9507,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9508,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be purchased for this price to be applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9682,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9509,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price set associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9475,
						"name": "PriceSetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9510,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 9554,
						"name": "PriceListDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9511,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated price set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9512,
					"name": "price_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price rules associated with the price."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9522,
							"name": "PriceRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 9513,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9514,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 9515,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the price was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9503,
						9504,
						9505,
						9506,
						9507,
						9508,
						9509,
						9510,
						9511,
						9512,
						9513,
						9514,
						9515
					]
				}
			]
		},
		{
			"id": 9495,
			"name": "FilterablePriceProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on prices."
					}
				]
			},
			"children": [
				{
					"id": 9500,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9495,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9495,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9705,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 9501,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 9495,
									"name": "FilterablePriceProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 9704,
									"typeArguments": [
										{
											"type": "reference",
											"target": 9495,
											"name": "FilterablePriceProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 9706,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 9496,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the prices by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9497,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency codes to filter price by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 9498,
					"name": "price_set_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price set."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9499,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the price's associated price list."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9500,
						9501,
						9496,
						9497,
						9498,
						9499
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9704,
					"typeArguments": [
						{
							"type": "reference",
							"target": 9495,
							"name": "FilterablePriceProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9165,
			"name": "IPricingModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Pricing Module."
					}
				]
			},
			"children": [
				{
					"id": 9166,
					"name": "calculatePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9167,
							"name": "calculatePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to calculate prices based on the provided filters and context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated prices matching the context and filters provided."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "When you calculate prices, you must at least specify the currency code:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for specific minimum and/or maximum quantity:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      min_quantity: 4,\n    },\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo calculate prices for custom rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst price = await pricingModuleService.calculatePrices(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    context: {\n      currency_code: \"usd\",\n      region_id: \"US\",\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9168,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9423,
										"name": "PricingFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9169,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context used to select the prices. For example, you can specify the region ID in this context, and only prices having the same value\nwill be retrieved."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9425,
										"name": "PricingContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9170,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9440,
											"name": "CalculatedPriceSet",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9171,
					"name": "retrievePriceSet",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9172,
							"name": "retrievePriceSet",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price set by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price set by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet =\n  await pricingModuleService.retrievePriceSet(\"pset_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.retrievePriceSet(\n  \"pset_123\",\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9173,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9174,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price set is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9475,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9175,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9475,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9176,
					"name": "listPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9177,
							"name": "listPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets({\n  id: [\"pset_123\", \"pset_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.listPriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9178,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9479,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9179,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9475,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9180,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9475,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9181,
					"name": "listAndCountPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9182,
							"name": "listAndCountPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets along with the total count of available price sets satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price sets along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices sets using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets({\n    id: [\"pset_123\", \"pset_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price sets:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceSets, count] =\n  await pricingModuleService.listAndCountPriceSets(\n    {\n      id: [\"pset_123\", \"pset_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9183,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9479,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9184,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price sets are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9475,
												"name": "PriceSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9185,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9475,
													"name": "PriceSetDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9186,
					"name": "createPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9187,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a new price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To create a default price set, don't pass any rules. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  rules: [],\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {},\n    },\n    {\n      amount: 400,\n      currency_code: \"USD\",\n      min_quantity: 5,\n      max_quantity: 10,\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo create a price set and associate it with rule types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.createPriceSets({\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9188,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9485,
										"name": "CreatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9189,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9475,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9190,
							"name": "createPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.createPriceSets([\n  // default price set\n  {\n    rules: [],\n    prices: [\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        min_quantity: 0,\n        max_quantity: 4,\n        rules: {},\n      },\n      {\n        amount: 400,\n        currency_code: \"USD\",\n        min_quantity: 5,\n        max_quantity: 10,\n        rules: {},\n      },\n    ],\n  },\n  // price set with rules\n  {\n    prices: [\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n      {\n        amount: 400,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n        },\n      },\n      {\n        amount: 450,\n        currency_code: \"EUR\",\n        rules: {\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9191,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price sets to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9485,
											"name": "CreatePriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9192,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9475,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9193,
					"name": "upsertPriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9194,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price sets, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.upsertPriceSets([\n  {\n    prices: [\n      {\n        amount: 100,\n        currency_code: \"USD\",\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9195,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9487,
											"name": "UpsertPriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9196,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9475,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9197,
							"name": "upsertPriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the price set if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.upsertPriceSets({\n  id: \"pset_123\",\n  prices: [{ amount: 100, currency_code: \"USD\" }],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9198,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new price set."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9487,
										"name": "UpsertPriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9199,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9475,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9200,
					"name": "updatePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9201,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price set."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.updatePriceSets(\n  \"pset_123\",\n  {\n     prices: [{ amount: 100, currency_code: \"USD\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9202,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price set to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9203,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price set to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9490,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9204,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9475,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9205,
							"name": "updatePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of price sets determined by the selector filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price sets."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.updatePriceSets(\n  {\n    id: [\"pset_123\", \"pset_321\"],\n  },\n  {\n    prices: [{ amount: 100, currency_code: \"USD\" }],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9206,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that will determine which price sets will be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9479,
										"name": "FilterablePriceSetProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9207,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected price sets"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9490,
										"name": "UpdatePriceSetDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9208,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9475,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9209,
					"name": "deletePriceSets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9210,
							"name": "deletePriceSets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes price sets by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price sets are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceSets([\"pset_123\", \"pset_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9211,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price sets to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9212,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9213,
					"name": "addPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9214,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to a price set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The price set that the prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To add a default price to a price set, don't pass it any rules and make sure to pass it the "
											},
											{
												"kind": "code",
												"text": "`currency_code`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 500,\n      currency_code: \"USD\",\n      rules: {},\n    },\n  ],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo add prices with rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceSet = await pricingModuleService.addPrices({\n  priceSetId: \"pset_123\",\n  prices: [\n    {\n      amount: 300,\n      currency_code: \"EUR\",\n      rules: {\n        region_id: \"PL\",\n        city: \"krakow\",\n      },\n    },\n    {\n      amount: 400,\n      currency_code: \"EUR\",\n      min_quantity: 0,\n      max_quantity: 4,\n      rules: {\n        region_id: \"PL\",\n      },\n    },\n    {\n      amount: 450,\n      currency_code: \"EUR\",\n      rules: {\n        city: \"krakow\",\n      },\n    },\n  ],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9215,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the price set to add the prices to, along with the prices to add."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9492,
										"name": "AddPricesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9216,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9475,
										"name": "PriceSetDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9217,
							"name": "addPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds prices to multiple price sets."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of the price sets that prices were added to."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceSets = await pricingModuleService.addPrices([\n  {\n    priceSetId: \"pset_123\",\n    prices: [\n      // default price because it doesn't\n      // have rules\n      {\n        amount: 500,\n        currency_code: \"USD\",\n        rules: {},\n      },\n    ],\n  },\n  {\n    priceSetId: \"pset_321\",\n    prices: [\n      // prices with rules\n      {\n        amount: 300,\n        currency_code: \"EUR\",\n        rules: {\n          region_id: \"PL\",\n          city: \"krakow\",\n        },\n      },\n    ],\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9218,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data defining the prices to add per price set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9492,
											"name": "AddPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9219,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9475,
											"name": "PriceSetDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9220,
					"name": "listPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9221,
							"name": "listPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices({\n  id: [\"price_123\", \"price_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst prices = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9222,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9495,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9223,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9502,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9224,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9502,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9225,
					"name": "softDeletePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9226,
							"name": "softDeletePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price rules.\nThe object's keys are the ID attribute names of the price entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price through this relation, such as the IDs of associated price rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9227,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9228,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9229,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9516,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9227,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9230,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9231,
					"name": "restorePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9232,
							"name": "restorePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9233,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9234,
									"name": "priceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9235,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the prices. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price's relation attribute names, such as price_rules"
											},
											{
												"kind": "code",
												"text": "`.\n@param {Context} sharedContext - A context used to share resources, such as transaction manager, between the application and the module.\n@returns {Promise<void | Record<string, string[]>>} An object that includes the IDs of related records that were restored, such as the ID of associated price rules.\nThe object's keys are the ID attribute names of the prices entity's relations, such as `"
											},
											{
												"kind": "text",
												"text": "price_rule_id"
											},
											{
												"kind": "code",
												"text": "`,\nand its value is an array of strings, each being the ID of the record associated with the prices through this relation,\nsuch as the IDs of associated price rules.\n\nIf there are no related records restored, the promise resolves to `"
											},
											{
												"kind": "text",
												"text": "void`."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9519,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9233,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9236,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9237,
					"name": "listAndCountPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9238,
							"name": "listAndCountPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of prices along with the total count of\navailable prices satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of prices and their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of prices using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the prices:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [prices, count] = await pricingModuleService.listPrices(\n  {\n    id: [\"price_123\", \"price_321\"],\n  },\n  {\n    relations: [\"price_rules\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9239,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved prices."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9495,
										"name": "FilterablePriceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9240,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the prices are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9502,
												"name": "PriceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9241,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9502,
													"name": "PriceDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9242,
					"name": "retrievePriceRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9243,
							"name": "retrievePriceRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRule =\n  await pricingModuleService.retrievePriceRule(\"prule_123\", {\n    relations: [\"price_set\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9244,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9245,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9522,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9246,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9522,
										"name": "PriceRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9247,
					"name": "listPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9248,
							"name": "listPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules({\n  id: [\"prule_123\", \"prule_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceRules = await pricingModuleService.listPriceRules(\n  {\n    id: [\"prule_123\", \"prule_321\"],\n  },\n  {\n    relations: [\"price_set\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9249,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9534,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9250,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9522,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9251,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9522,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9252,
					"name": "listAndCountPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9253,
							"name": "listAndCountPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price rules along with the total count of available price rules satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"prule_123\", \"prule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"prule_123\", \"prule_321\"],\n    },\n    {\n      relations: [\"price_set\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9254,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9534,
										"name": "FilterablePriceRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9255,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9522,
												"name": "PriceRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9256,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9522,
													"name": "PriceRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9257,
					"name": "createPriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9258,
							"name": "createPriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create new price rules based on the provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.createPriceRules([\n    {\n      value: \"VIP\",\n      attribute: \"customer_group\",\n      price_set_id: \"pset_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9259,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9540,
											"name": "CreatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9260,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9522,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9261,
					"name": "updatePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9262,
							"name": "updatePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price rules, each with their provided data."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of updated price rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceRules =\n  await pricingModuleService.updatePriceRules([\n    {\n      id: \"prule_123\",\n      price_id: \"price_123\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9263,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price rules to update, each having attributes that should be updated in a price rule."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9546,
											"name": "UpdatePriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9264,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9522,
											"name": "PriceRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9265,
					"name": "deletePriceRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9266,
							"name": "deletePriceRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price rules based on the specified IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves once the price rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceRules([\n  \"prule_123\",\n  \"prule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9267,
									"name": "priceRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9268,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9269,
					"name": "retrievePriceList",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9270,
							"name": "retrievePriceList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.retrievePriceList(\"plist_123\", {\n    relations: [\"prices\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9271,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9272,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9554,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9273,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9554,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9274,
					"name": "listPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9275,
							"name": "listPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists({\n  id: [\"plist_123\", \"plist_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceLists = await pricingModuleService.listPriceLists(\n  {\n    id: [\"plist_123\", \"plist_321\"],\n  },\n  {\n    relations: [\"prices\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9276,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9566,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9277,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9554,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9278,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9554,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9279,
					"name": "listAndCountPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9280,
							"name": "listAndCountPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price lists along with the total count of available price lists satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price lists along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price lists using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists({\n    id: [\"plist_123\", \"plist_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceLists, count] =\n  await pricingModuleService.listAndCountPriceLists(\n    {\n      id: [\"plist_123\", \"plist_321\"],\n    },\n    {\n      relations: [\"prices\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9281,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9566,
										"name": "FilterablePriceListProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9282,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price lists are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9554,
												"name": "PriceListDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9283,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9554,
													"name": "PriceListDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9284,
					"name": "createPriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9285,
							"name": "createPriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.createPriceLists([\n    {\n      title: \"Sale 1\",\n      description: \"Summer sale\",\n    },\n    {\n      title: \"Sale 2\",\n      description: \"Winter sale\",\n      starts_at: \"2024-12-21\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9286,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of each price list to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9575,
											"name": "CreatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9287,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9554,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9288,
					"name": "updatePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9289,
							"name": "updatePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceLists([\n    {\n      id: \"plist_123\",\n      title: \"Sale 1\",\n    },\n    {\n      id: \"plist_321\",\n      description: \"Winter sale\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9290,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in each price list. The price list is identifed by the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9584,
											"name": "UpdatePriceListDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9291,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9554,
											"name": "PriceListDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9292,
					"name": "deletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9293,
							"name": "deletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price lists are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9294,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9295,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9296,
					"name": "softDeletePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9297,
							"name": "softDeletePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes price lists by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the price list through this relation, such as the IDs of associated price list rule.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9298,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9299,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price lists."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9300,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9516,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9298,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9301,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9302,
					"name": "restorePriceLists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9303,
							"name": "restorePriceLists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted price lists by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated price list rules.\nThe object's keys are the ID attribute names of the price list entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rule_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the price list through this relation,\nsuch as the IDs of associated price list rules.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePriceLists([\n  \"plist_123\",\n  \"plist_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9304,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9305,
									"name": "priceListIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9306,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the price lists. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the price list's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`price_list_rules`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9519,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9304,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9307,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9308,
					"name": "retrievePriceListRule",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9309,
							"name": "retrievePriceListRule",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price list rule by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price list rule."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price list rule by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRule =\n  await pricingModuleService.retrievePriceListRule(\n    \"plrule_123\",\n    {\n      relations: [\"price_list\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9310,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price list rule to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9311,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9592,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9312,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9592,
										"name": "PriceListRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9313,
					"name": "listPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9314,
							"name": "listPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst priceListRules =\n  await pricingModuleService.listPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9315,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9597,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9316,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9592,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9317,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9592,
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9318,
					"name": "listAndCountPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9319,
							"name": "listAndCountPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price list ruless along with the total count of available price list ruless satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price list rules along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price list vs using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules({\n    id: [\"plrule_123\", \"plrule_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price list rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [priceListRules, count] =\n  await pricingModuleService.listAndCountPriceListRules(\n    {\n      id: [\"plrule_123\", \"plrule_321\"],\n    },\n    {\n      relations: [\"price_list_rule_values\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9320,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price list rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9597,
										"name": "FilterablePriceListRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9321,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price list rules are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price list rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9592,
												"name": "PriceListRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9322,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9592,
													"name": "PriceListRuleDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9323,
					"name": "deletePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9324,
							"name": "deletePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete price list rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves successfully when the price list rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePriceListRules([\n  \"plrule_123\",\n  \"plrule_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9325,
									"name": "priceListRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price list rules to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9326,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9327,
					"name": "addPriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9328,
							"name": "addPriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to add prices to price lists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.addPriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9329,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The prices to add for each price list."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9603,
											"name": "AddPriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9330,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9502,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9331,
					"name": "updatePriceListPrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9332,
							"name": "updatePriceListPrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price list's prices."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceLists =\n  await pricingModuleService.updatePriceListPrices([\n    {\n      price_list_id: \"plist_123\",\n      prices: [\n        {\n          id: \"price_123\",\n          currency_code: \"usd\",\n          amount: 500,\n          price_set_id: \"pset_123\",\n        },\n      ],\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9333,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in a price list's prices. The price list's ID is specified\nin the "
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9606,
											"name": "UpdatePriceListPricesDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9334,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9502,
											"name": "PriceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9335,
					"name": "setPriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9336,
							"name": "setPriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to set the rules of a price list. Previous rules are removed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price list's prices."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.setPriceListRules({\n    price_list_id: \"plist_123\",\n    rules: {\n      region_id: \"reg_123\",\n    },\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9337,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to set for a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9609,
										"name": "SetPriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9338,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9554,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9339,
					"name": "removePriceListRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9340,
							"name": "removePriceListRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to remove rules from a price list."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price lists."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst priceList =\n  await pricingModuleService.removePriceListRules({\n    price_list_id: \"plist_123\",\n    rules: [\"region_id\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9341,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rules to remove from a price list. The price list is identified by the\n"
											},
											{
												"kind": "code",
												"text": "`price_list_id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9612,
										"name": "RemovePriceListRulesDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9342,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9554,
										"name": "PriceListDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9343,
					"name": "removePrices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9344,
							"name": "removePrices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes prices by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the prices are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.removePrices([\n  \"price_123\",\n  \"price_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9345,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9346,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9347,
					"name": "retrievePricePreference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9348,
							"name": "retrievePricePreference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a price preference by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a price preference by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference =\n  await pricingModuleService.retrievePricePreference(\"prpref_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9349,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price preference to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9350,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price preference is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9615,
												"name": "PricePreferenceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9351,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9615,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9352,
					"name": "listPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9353,
							"name": "listPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price preferences based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of price preferences using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.listPricePreferences({\n  id: [\"prpref_123\", \"prpref_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the price preferences:\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.listPricePreferences(\n  {\n    id: [\"prpref_123\", \"prpref_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9354,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved price lists."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9623,
										"name": "FilterablePricePreferenceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9355,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the price preferences are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9465,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9615,
												"name": "PricePreferenceDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9356,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9615,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9357,
					"name": "createPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9358,
							"name": "createPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a new price preference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To create a price preference with rule:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.createPricePreferences({\n   attribute: 'region_id',\n   value: 'DE',\n   is_tax_inclusive: true\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9359,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price preference to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9629,
										"name": "CreatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9360,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9615,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9361,
							"name": "createPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create multiple price preferences."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.createPricePreferences([{\n   attribute: 'region_id',\n   value: 'DE',\n   is_tax_inclusive: true\n}])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9362,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The price preferences to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9629,
											"name": "CreatePricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9363,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9615,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9364,
					"name": "upsertPricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9365,
							"name": "upsertPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing price preferences, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.upsertPricePreferences([\n  {\n     id: \"prpref_123\",\n     attribute: 'region_id',\n     value: 'DE',\n     is_tax_inclusive: true\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9366,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each price preference."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9633,
											"name": "UpsertPricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9367,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9615,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9368,
							"name": "upsertPricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the price preference if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.upsertPricePreferences(\n  {\n     id: \"prpref_123\",\n     attribute: 'region_id',\n     value: 'DE',\n     is_tax_inclusive: true\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9369,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new price preference."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9633,
										"name": "UpsertPricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9370,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9615,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9371,
					"name": "updatePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9372,
							"name": "updatePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a price preference."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price preference."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreference = await pricingModuleService.updatePricePreferences(\n  \"prpref_123\",\n  {\n     is_tax_inclusive: false\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9373,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the price preference to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9374,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the price preference to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9638,
										"name": "UpdatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9375,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9615,
										"name": "PricePreferenceDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9376,
							"name": "updatePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of price preferences determined by the selector filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated price preferences."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst pricePreferences = await pricingModuleService.updatePricePreferences(\n  {\n    id: [\"prpref_123\", \"prpref_321\"],\n  },\n  {\n    is_tax_inclusive: false\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9377,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that will determine which price preferences will be updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9623,
										"name": "FilterablePricePreferenceProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9378,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected price preferences"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9638,
										"name": "UpdatePricePreferenceDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9379,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9615,
											"name": "PricePreferenceDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9380,
					"name": "softDeletePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9381,
							"name": "softDeletePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nThe object's keys are the ID attribute names of the price preference entity's relations, and its value is an array of strings, each being the ID of a record associated.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.softDeletePricePreferences([\n  \"prpref_123\",\n  \"prpref_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9382,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9383,
									"name": "pricePreferenceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9384,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9516,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9382,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9385,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9386,
					"name": "restorePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9387,
							"name": "restorePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nThe object's keys are the ID attribute names of the price preferences entity's relations,\nand its value is an array of strings, each being the ID of the record associated with the price preferences through this relation.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.restorePricePreferences([\n  \"prpref_123\",\n  \"prpref_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9388,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9389,
									"name": "pricePreferenceIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9390,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the price preferences."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9519,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9388,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9391,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9392,
					"name": "deletePricePreferences",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9393,
							"name": "deletePricePreferences",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes price preferences by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the price preferences are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait pricingModuleService.deletePricePreferences([\"prpref_123\", \"prpref_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9394,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the price preferences to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9395,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9427,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						9166,
						9171,
						9176,
						9181,
						9186,
						9193,
						9200,
						9209,
						9213,
						9220,
						9225,
						9231,
						9237,
						9242,
						9247,
						9252,
						9257,
						9261,
						9265,
						9269,
						9274,
						9279,
						9284,
						9288,
						9292,
						9296,
						9302,
						9308,
						9313,
						9318,
						9323,
						9327,
						9331,
						9335,
						9339,
						9343,
						9347,
						9352,
						9357,
						9364,
						9371,
						9380,
						9386,
						9392
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9409,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 9797,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9798,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9799,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9800,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 9801,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 9802,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 9803,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9798,
						9799,
						9803
					]
				}
			]
		},
		{
			"id": 9668,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9669,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9670,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 9671,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 9793,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9793,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9672,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9673,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 9674,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 9797,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9793,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9675,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9676,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9677,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9678,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 9679,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 9680,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 9804,
												"typeArguments": [
													{
														"type": "reference",
														"target": 9679,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9804,
													"typeArguments": [
														{
															"type": "reference",
															"target": 9679,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 9681,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						9669,
						9672,
						9675,
						9677
					]
				}
			]
		},
		{
			"id": 9427,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 9428,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 9429,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9439,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 9430,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9439,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 9431,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9432,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9433,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9434,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9435,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 9668,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9436,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9437,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9438,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9428,
						9429,
						9430,
						9431,
						9432,
						9433,
						9434,
						9435,
						9436,
						9437,
						9438
					]
				}
			],
			"typeParameters": [
				{
					"id": 9439,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 9785,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 9786,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 9787,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 9683,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9788,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 9789,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9790,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 9791,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9792,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9786,
						9787,
						9788
					]
				},
				{
					"title": "Methods",
					"children": [
						9789,
						9791
					]
				}
			]
		},
		{
			"id": 9683,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 9684,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9685,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9685
							]
						}
					],
					"indexSignatures": [
						{
							"id": 9686,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 9687,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 9667,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 9683,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 9785,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 9682,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 9785,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				9465,
				9704,
				9516,
				9519,
				9832,
				9761,
				9409,
				9693,
				9814,
				9826,
				9708,
				9554,
				9745,
				9753,
				9825,
				9744,
				9575,
				9584,
				9566,
				9597,
				9592,
				9603,
				9606,
				9609,
				9612,
				9615,
				9633,
				9638,
				9629,
				9623,
				9522,
				9540,
				9546,
				9534,
				9425,
				9423,
				9475,
				9440,
				9820,
				9713,
				9492,
				9485,
				9487,
				9490,
				9479,
				9502,
				9495,
				9165,
				9797,
				9668,
				9427,
				9785
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				9688,
				9821,
				9823,
				9852,
				9890,
				9880,
				9722,
				9877,
				9859,
				9879,
				9871,
				9856,
				9861,
				9846,
				9793,
				9804,
				9836,
				9864,
				9779,
				9642,
				9776,
				9720,
				9721,
				9683,
				9667,
				9682
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"9164": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": ""
		},
		"9165": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService"
		},
		"9166": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"9167": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.calculatePrices"
		},
		"9168": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9169": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "context"
		},
		"9170": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9171": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"9172": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceSet"
		},
		"9173": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9174": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9175": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9176": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"9177": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceSets"
		},
		"9178": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9179": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9180": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9181": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"9182": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceSets"
		},
		"9183": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9184": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9185": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9186": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"9187": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"9188": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9189": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9190": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceSets"
		},
		"9191": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9192": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9193": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"9194": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"9195": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9196": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9197": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPriceSets"
		},
		"9198": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9199": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9200": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"9201": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"9202": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9203": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9204": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9205": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceSets"
		},
		"9206": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "selector"
		},
		"9207": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9208": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9209": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"9210": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceSets"
		},
		"9211": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"9212": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9213": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"9214": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"9215": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9216": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9217": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPrices"
		},
		"9218": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9219": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9220": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"9221": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPrices"
		},
		"9222": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9223": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9224": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9225": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"9226": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePrices"
		},
		"9227": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9228": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"9229": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9230": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9231": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"9232": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePrices"
		},
		"9233": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9234": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceIds"
		},
		"9235": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9236": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9237": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"9238": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPrices"
		},
		"9239": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9240": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9241": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9242": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"9243": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceRule"
		},
		"9244": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9245": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9246": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9247": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"9248": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceRules"
		},
		"9249": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9250": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9251": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9252": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"9253": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceRules"
		},
		"9254": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9255": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9256": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9257": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"9258": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceRules"
		},
		"9259": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9260": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9261": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"9262": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceRules"
		},
		"9263": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9264": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9265": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"9266": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceRules"
		},
		"9267": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceRuleIds"
		},
		"9268": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9269": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"9270": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceList"
		},
		"9271": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9272": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9273": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9274": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"9275": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceLists"
		},
		"9276": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9277": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9278": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9279": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"9280": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceLists"
		},
		"9281": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9282": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9283": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9284": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"9285": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPriceLists"
		},
		"9286": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9287": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9288": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"9289": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceLists"
		},
		"9290": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9291": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9292": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"9293": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceLists"
		},
		"9294": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"9295": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9296": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"9297": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePriceLists"
		},
		"9298": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9299": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"9300": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9301": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9302": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"9303": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePriceLists"
		},
		"9304": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9305": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListIds"
		},
		"9306": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9307": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9308": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"9309": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePriceListRule"
		},
		"9310": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9311": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9312": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9313": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"9314": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPriceListRules"
		},
		"9315": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9316": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9317": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9318": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"9319": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listAndCountPriceListRules"
		},
		"9320": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9321": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9322": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9323": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"9324": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePriceListRules"
		},
		"9325": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "priceListRuleIds"
		},
		"9326": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9327": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"9328": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.addPriceListPrices"
		},
		"9329": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9330": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9331": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"9332": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePriceListPrices"
		},
		"9333": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9334": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9335": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"9336": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.setPriceListRules"
		},
		"9337": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9338": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9339": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"9340": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePriceListRules"
		},
		"9341": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9342": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9343": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"9344": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.removePrices"
		},
		"9345": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"9346": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9347": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePricePreference"
		},
		"9348": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.retrievePricePreference"
		},
		"9349": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9350": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9351": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9352": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPricePreferences"
		},
		"9353": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.listPricePreferences"
		},
		"9354": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "filters"
		},
		"9355": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9356": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9357": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"9358": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"9359": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9360": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9361": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.createPricePreferences"
		},
		"9362": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9363": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9364": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"9365": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"9366": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9367": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9368": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.upsertPricePreferences"
		},
		"9369": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9370": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9371": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"9372": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"9373": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "id"
		},
		"9374": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9375": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9376": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.updatePricePreferences"
		},
		"9377": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "selector"
		},
		"9378": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "data"
		},
		"9379": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9380": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePricePreferences"
		},
		"9381": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.softDeletePricePreferences"
		},
		"9382": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9383": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "pricePreferenceIds"
		},
		"9384": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9385": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9386": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePricePreferences"
		},
		"9387": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.restorePricePreferences"
		},
		"9388": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9389": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "pricePreferenceIds"
		},
		"9390": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "config"
		},
		"9391": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9392": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePricePreferences"
		},
		"9393": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "IPricingModuleService.deletePricePreferences"
		},
		"9394": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "ids"
		},
		"9395": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9409": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"9410": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"9411": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"9412": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"9413": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9414": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"9415": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9416": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9417": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"9418": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9419": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9420": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"9421": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9422": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9423": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters"
		},
		"9424": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingFilters.id"
		},
		"9425": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext"
		},
		"9426": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"9427": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"9428": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"9429": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"9430": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"9431": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"9432": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"9433": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"9434": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"9435": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"9436": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"9437": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"9438": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"9439": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"9440": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet"
		},
		"9441": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.id"
		},
		"9442": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_price_list"
		},
		"9443": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_calculated_price_tax_inclusive"
		},
		"9444": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_amount"
		},
		"9445": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.raw_calculated_amount"
		},
		"9446": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_price_list"
		},
		"9447": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.is_original_price_tax_inclusive"
		},
		"9448": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_amount"
		},
		"9449": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.raw_original_amount"
		},
		"9450": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.currency_code"
		},
		"9451": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.calculated_price"
		},
		"9452": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"9453": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"9454": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"9455": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"9456": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"9457": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"9458": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CalculatedPriceSet.original_price"
		},
		"9459": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type"
		},
		"9460": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.id"
		},
		"9461": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_id"
		},
		"9462": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.price_list_type"
		},
		"9463": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"9464": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"9465": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"9466": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"9467": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"9468": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"9469": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"9470": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"9471": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"9472": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"9473": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"9474": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"9475": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO"
		},
		"9476": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.id"
		},
		"9477": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.prices"
		},
		"9478": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PriceSetDTO.calculated_price"
		},
		"9479": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps"
		},
		"9480": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.id"
		},
		"9481": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "FilterablePriceSetProps.prices"
		},
		"9482": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9483": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9484": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "PricingContext.context"
		},
		"9485": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO"
		},
		"9486": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetDTO.prices"
		},
		"9487": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO"
		},
		"9488": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpsertPriceSetDTO.id"
		},
		"9489": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"9490": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO"
		},
		"9491": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "UpdatePriceSetDTO.prices"
		},
		"9492": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO"
		},
		"9493": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.priceSetId"
		},
		"9494": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "AddPricesDTO.prices"
		},
		"9495": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps"
		},
		"9496": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.id"
		},
		"9497": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.currency_code"
		},
		"9498": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_set_id"
		},
		"9499": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "FilterablePriceProps.price_list_id"
		},
		"9500": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9501": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9502": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO"
		},
		"9503": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.id"
		},
		"9504": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.title"
		},
		"9505": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.currency_code"
		},
		"9506": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.amount"
		},
		"9507": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.min_quantity"
		},
		"9508": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.max_quantity"
		},
		"9509": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set"
		},
		"9510": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_list"
		},
		"9511": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_set_id"
		},
		"9512": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.price_rules"
		},
		"9513": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.created_at"
		},
		"9514": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.updated_at"
		},
		"9515": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
			"qualifiedName": "PriceDTO.deleted_at"
		},
		"9516": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"9517": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"9518": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9519": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"9520": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"9521": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9522": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO"
		},
		"9523": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.id"
		},
		"9524": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set_id"
		},
		"9525": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_set"
		},
		"9526": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.attribute"
		},
		"9527": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.value"
		},
		"9528": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.priority"
		},
		"9529": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_id"
		},
		"9530": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.price_list_id"
		},
		"9531": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.created_at"
		},
		"9532": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.updated_at"
		},
		"9533": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "PriceRuleDTO.deleted_at"
		},
		"9534": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps"
		},
		"9535": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.id"
		},
		"9536": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.name"
		},
		"9537": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "FilterablePriceRuleProps.price_set_id"
		},
		"9538": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9539": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9540": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO"
		},
		"9541": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_set_id"
		},
		"9542": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.attribute"
		},
		"9543": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.value"
		},
		"9544": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.priority"
		},
		"9545": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "CreatePriceRuleDTO.price_id"
		},
		"9546": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO"
		},
		"9547": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.id"
		},
		"9548": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_set_id"
		},
		"9549": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.attribute"
		},
		"9550": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.value"
		},
		"9551": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.priority"
		},
		"9552": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_id"
		},
		"9553": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-rule.ts",
			"qualifiedName": "UpdatePriceRuleDTO.price_list_id"
		},
		"9554": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO"
		},
		"9555": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.id"
		},
		"9556": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.title"
		},
		"9557": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.description"
		},
		"9558": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.starts_at"
		},
		"9559": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.status"
		},
		"9560": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.type"
		},
		"9561": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.ends_at"
		},
		"9562": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.rules_count"
		},
		"9563": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.prices"
		},
		"9564": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.money_amounts"
		},
		"9565": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListDTO.price_list_rules"
		},
		"9566": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"9567": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"9568": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"9569": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.starts_at"
		},
		"9570": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.ends_at"
		},
		"9571": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"9572": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.rules_count"
		},
		"9573": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9574": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9575": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"9576": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.title"
		},
		"9577": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.description"
		},
		"9578": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"9579": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"9580": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"9581": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.type"
		},
		"9582": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"9583": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"9584": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO"
		},
		"9585": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.id"
		},
		"9586": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.title"
		},
		"9587": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.description"
		},
		"9588": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.starts_at"
		},
		"9589": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.ends_at"
		},
		"9590": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.status"
		},
		"9591": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListDTO.rules"
		},
		"9592": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO"
		},
		"9593": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.id"
		},
		"9594": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.attribute"
		},
		"9595": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.value"
		},
		"9596": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListRuleDTO.price_list"
		},
		"9597": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps"
		},
		"9598": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.id"
		},
		"9599": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.value"
		},
		"9600": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "FilterablePriceListRuleProps.price_list_id"
		},
		"9601": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9602": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9603": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO"
		},
		"9604": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.price_list_id"
		},
		"9605": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "AddPriceListPricesDTO.prices"
		},
		"9606": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO"
		},
		"9607": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.price_list_id"
		},
		"9608": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPricesDTO.prices"
		},
		"9609": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO"
		},
		"9610": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.price_list_id"
		},
		"9611": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "SetPriceListRulesDTO.rules"
		},
		"9612": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO"
		},
		"9613": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.price_list_id"
		},
		"9614": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "RemovePriceListRulesDTO.rules"
		},
		"9615": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO"
		},
		"9616": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.id"
		},
		"9617": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.attribute"
		},
		"9618": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.value"
		},
		"9619": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.is_tax_inclusive"
		},
		"9620": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.created_at"
		},
		"9621": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.updated_at"
		},
		"9622": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "PricePreferenceDTO.deleted_at"
		},
		"9623": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps"
		},
		"9624": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.id"
		},
		"9625": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.attribute"
		},
		"9626": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "FilterablePricePreferenceProps.value"
		},
		"9627": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9628": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9629": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO"
		},
		"9630": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.attribute"
		},
		"9631": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.value"
		},
		"9632": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "CreatePricePreferenceDTO.is_tax_inclusive"
		},
		"9633": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpsertPricePreferenceDTO"
		},
		"9634": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpsertPricePreferenceDTO.id"
		},
		"9635": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.attribute"
		},
		"9636": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.value"
		},
		"9637": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.is_tax_inclusive"
		},
		"9638": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO"
		},
		"9639": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.attribute"
		},
		"9640": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.value"
		},
		"9641": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-preference.ts",
			"qualifiedName": "UpdatePricePreferenceDTO.is_tax_inclusive"
		},
		"9642": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"9643": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9644": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"9645": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"9646": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"9647": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9648": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9649": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9650": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"9651": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9652": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"9653": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"9654": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"9655": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"9656": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9657": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"9658": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"9659": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"9660": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"9661": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"9662": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"9663": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9664": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"9665": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"9666": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"9667": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"9668": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"9669": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"9670": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"9671": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"9672": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"9673": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"9674": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"9675": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"9676": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"9677": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"9678": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"9679": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"9680": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"9681": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"9682": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"9683": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"9684": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"9685": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"9686": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"9688": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"9689": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"9690": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"9692": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"9693": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO"
		},
		"9694": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.id"
		},
		"9695": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.currency_code"
		},
		"9696": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.amount"
		},
		"9697": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.min_quantity"
		},
		"9698": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.max_quantity"
		},
		"9699": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.rules_count"
		},
		"9700": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.price_rules"
		},
		"9701": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.created_at"
		},
		"9702": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.updated_at"
		},
		"9703": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "MoneyAmountDTO.deleted_at"
		},
		"9704": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"9705": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9706": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9707": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"9708": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps"
		},
		"9709": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.id"
		},
		"9710": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "FilterableMoneyAmountProps.currency_code"
		},
		"9711": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"9712": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"9713": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO"
		},
		"9714": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePricesDTO.rules"
		},
		"9715": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"9716": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"9717": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"9718": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"9719": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"9720": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"9721": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"9722": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"9723": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9724": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"9725": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"9726": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"9727": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"9728": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"9729": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"9730": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"9731": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"9732": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"9733": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"9734": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"9735": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"9736": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"9737": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"9738": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"9739": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"9740": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"9741": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"9742": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"9743": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9744": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListRules"
		},
		"9745": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"9746": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"9747": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.rules"
		},
		"9748": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"9749": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"9750": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"9751": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"9752": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"9753": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO"
		},
		"9754": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.price_set_id"
		},
		"9755": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "UpdatePriceListPriceDTO.rules"
		},
		"9756": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"9757": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"9758": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"9759": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"9760": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"9761": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"9762": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"9763": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"9764": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"9765": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9766": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"9767": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"9768": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"9769": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"9770": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"9771": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9772": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9773": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9774": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"9775": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"9776": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"9777": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9778": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"9779": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"9780": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9781": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"9782": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"9783": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"9784": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"9785": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"9786": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"9787": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"9788": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"9789": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"9790": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"9791": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"9792": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"9793": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"9794": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9795": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"9796": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9797": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"9798": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"9799": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"9800": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"9801": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"9803": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"9804": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"9805": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9806": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"9807": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"9808": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"9809": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"9810": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"9811": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"9812": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"9813": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9814": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO"
		},
		"9815": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.id"
		},
		"9816": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.currency_code"
		},
		"9817": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.amount"
		},
		"9818": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.min_quantity"
		},
		"9819": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "CreateMoneyAmountDTO.max_quantity"
		},
		"9820": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-set.ts",
			"qualifiedName": "CreatePriceSetPriceRules"
		},
		"9821": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"9822": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9823": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"9824": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9825": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
			"qualifiedName": "CreatePriceListPriceRules"
		},
		"9826": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO"
		},
		"9827": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.id"
		},
		"9828": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.currency_code"
		},
		"9829": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.amount"
		},
		"9830": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.min_quantity"
		},
		"9831": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
			"qualifiedName": "UpdateMoneyAmountDTO.max_quantity"
		},
		"9832": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"9833": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"9834": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"9835": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"9836": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"9837": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"9838": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"9839": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"9840": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"9841": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"9842": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"9843": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"9844": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"9845": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"9846": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"9847": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9848": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"9849": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"9850": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"9851": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"9852": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"9853": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9854": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"9855": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"9856": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"9857": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9858": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"9859": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"9860": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9861": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"9862": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"9863": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"9864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"9865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"9869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"9870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"9871": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"9872": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9873": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"9875": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9876": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"9877": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"9878": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9879": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"9880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"9881": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9882": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"9883": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9884": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"9885": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9886": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"9887": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"9888": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"9889": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"9890": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"9891": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/pricing/service.ts"
		},
		"reflections": {
			"1": 9164
		}
	}
}
